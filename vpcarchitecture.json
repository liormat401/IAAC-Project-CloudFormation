{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "A template for learning CloudFormation",
  "Metadata": {
    "Author": "Lior Matana"
  },
  "Resources": {
    "DemoVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "192.168.0.0/16"
      }
    },
    "PublicSub": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": "us-west-2a",
        "CidrBlock": "192.168.1.0/24",
        "VpcId": {
          "Ref": "DemoVPC"
        },
        "Tags": [{"Key": "Name", "Value": "Public Subnet"}]
      }
    },
    "PrivateSub1": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": "us-west-2a",
        "CidrBlock": "192.168.2.0/24",
        "VpcId": {
          "Ref": "DemoVPC"
        },
        "Tags": [{"Key": "Name", "Value": "Private Subnet 1"}]
      }
    },
    "PrivateSub2": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": "us-west-2a",
        "CidrBlock": "192.168.3.0/24",
        "VpcId": {
          "Ref": "DemoVPC"
        },
        "Tags": [{"Key": "Name", "Value": "Private Subnet 2"}]
      }
    },
    "PrivateSub3": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "AvailabilityZone": "us-west-2b",
        "CidrBlock": "192.168.4.0/24",
        "VpcId": {
          "Ref": "DemoVPC"
        },
        "Tags": [{"Key": "Name", "Value": "Private Subnet 1"}]
      }
    },
    "DemoIGW": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {}
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {"Ref": "DemoVPC"},
        "InternetGatewayId": {"Ref": "DemoIGW"}
      }
    },
    "NATGateway":{
      "Type":"AWS::EC2::NatGateway",
      "Properties":{
        "SubnetId":{
          "Ref":"PublicSub"
        },
        "ConnectivityType":"public"
      }
    },
    "PublicRoute":{
      "Type":"AWS::EC2::RouteTable",
      "Properties":{
        "VpcId":{"Ref":"DemoVPC"}
      }
    },
    "PrivateRoute":{
      "Type":"AWS::EC2::RouteTable",
      "Properties":{
        "VpcId":{"Ref":"DemoVPC"}
      }
    },
    "pubsubroutetableassociation" :{
      "Type" : "AWS::EC2::SubnetRouteTableAssociation",
      "Properties" :{
        "RouteTableId":{"Ref":"PublicRoute"},
        "SubnetId":{ "Ref" : "PublicSub"}
      }
    },
    "PubRoute" :{
      "Type":"AWS::EC2::Route",
      "DependsOn":"DemoIGW",
      "Properties":{
        "RouteTableId": {"Ref":"PublicRoute"},
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId":{"Ref":"DemoIGW"}
      }
    },
    "PriSubroutetableassociation1":{
      "Type":"AWS::EC2::SubnetRouteTableAssociation",
      "Properties":{
        "RouteTableId":{"Ref":"PrivateRoute"},
        "SubnetId":{"Ref":"PrivateSub1"}
      }
    },
    "PriSubroutetableassociation2":{
      "Type":"AWS::EC2::SubnetRouteTableAssociation",
      "Properties":{
        "RouteTableId":{"Ref":"PrivateRoute"},
        "SubnetId":{"Ref":"PrivateSub2"}
      }
    },
    "PriSubroutetableassociation3":{
      "Type":"AWS::EC2::SubnetRouteTableAssociation",
      "Properties":{
        "RouteTableId":{"Ref":"PrivateRoute"},
        "SubnetId":{"Ref":"PrivateSub3"}
      }
    },
    "PriRoute":{
      "Type":"AWS::EC2::Route",
      "DependsOn":"NATGateway",
      "Properties":{
        "RouteTableId":{"Ref":"PrivateRoute"},
        "DestinationCidrBlock":"0.0.0.0/0",
        "NatGatewayId":{"Ref":"NATGateway"}
      }
    },
    "bastionSG":{
      "Type":"AWS::EC2::SecurityGroup",
      "Properties":{
        "GroupDescription":"this is the sd of bastion host",
        "VpcId":{"Ref":"DemoVPC"},
        "SecurityGroupEgress":[{
          "IpProtocol": "tcp",
          "FromPort":"80",
          "ToPort":"80",
          "CidrIp":"0.0.0.0/0"
        },
        {
          "IpProtocol": "tcp",
          "FromPort":"443",
          "ToPort":"443",
          "CidrIp":"0.0.0.0/0"
        },
        {
          "IpProtocol": "tcp",
          "FromPort":"22",
          "ToPort":"22",
          "CidrIp":"0.0.0.0/0"
        }
      ]
      }
    },
    "webserverSG":{
      "Type":"AWS::EC2::SecurityGroup",
      "Properties":{
        "GroupDescription":"this is the sd of webserver",
        "VpcId":{"Ref":"DemoVPC"},
        "SecurityGroupIngress":[{
          "IpProtocol": "tcp",
          "FromPort":"80",
          "ToPort":"80",
          "CidrIp":"0.0.0.0/0"
        },
        {
          "IpProtocol": "tcp",
          "FromPort":"443",
          "ToPort":"443",
          "CidrIp":"0.0.0.0/0"
        },
        {
          "IpProtocol": "tcp",
          "FromPort":"22",
          "ToPort":"22",
          "CidrIp":"0.0.0.0/0"
        }
      ]
      }
    },
    "appSG":{
      "Type":"AWS::EC2::SecurityGroup",
      "Properties":{
        "GroupDescription":"this is the sd of the app",
        "VpcId":{"Ref":"DemoVPC"},
        "SecurityGroupIngress":[{
          "IpProtocol": "tcp",
          "FromPort":"80",
          "ToPort":"80",
          "CidrIp":"0.0.0.0/0"
        },
        {
          "IpProtocol": "tcp",
          "FromPort":"443",
          "ToPort":"443",
          "CidrIp":"0.0.0.0/0"
        }
      ]
      }
    },
    "dbSG":{
      "Type":"AWS::EC2::SecurityGroup",
      "Properties":{
        "GroupDescription":"this is the sd of database",
        "VpcId":{"Ref":"DemoVPC"}
      }
    },
    "inboundApp-web":{
      "Type": "AWS::EC2::SecurityGroupingress",
      "Properties":{
        "IpProtocol":"icmp",
        "FromPort":"-1",
        "ToPort":"-1",
        "SourceSecurityGroupId":{"Ref":"webserverSG"},
        "GroupId":{"Ref":"appSG"}
      }
    },
    "inboundApp-bastion":{
      "Type": "AWS::EC2::SecurityGroupingress",
      "Properties":{
        "IpProtocol":"tcp",
        "FromPort":"22",
        "ToPort":"22",
        "SourceSecurityGroupId":{"Ref":"bastionSG"},
        "GroupId":{"Ref":"appSG"}
      }
    },
    "inboundDB-app":{
      "Type": "AWS::EC2::SecurityGroupingress",
      "Properties":{
        "IpProtocol":"tcp",
        "FromPort":"3306",
        "ToPort":"3306",
        "SourceSecurityGroupId":{"Ref":"appSG"},
        "GroupId":{"Ref":"dbSG"}

      }
    },
    "inboundDB-bastion":{
      "Type": "AWS::EC2::SecurityGroupingress",
      "Properties":{
        "IpProtocol":"tcp",
        "FromPort":"3306",
        "ToPort":"3306",
        "SourceSecurityGroupId":{"Ref":"bastionSG"},
        "GroupId":{"Ref":"dbSG"}

      }
    },
    "inboundBastion-dbSG":{
      "Type": "AWS::EC2::SecurityGroupingress",
      "Properties":{
        "IpProtocol":"tcp",
        "FromPort":"3306",
        "ToPort":"3306",
        "SourceSecurityGroupId":{"Ref":"dbSG"},
        "GroupId":{"Ref":"bastionSG"}

      }
    },
    "inboundWeb-db":{
      "Type": "AWS::EC2::SecurityGroupingress",
      "Properties":{
        "IpProtocol":"icmp",
        "FromPort":"-1",
        "ToPort":"-1",
        "SourceSecurityGroupId":{"Ref":"dbSG"},
        "GroupId":{"Ref":"webserverSG"}

      }
    },
    "inboundApp-db":{
      "Type": "AWS::EC2::SecurityGroupingress",
      "Properties":{
        "IpProtocol":"tcp",
        "FromPort":"3306",
        "ToPort":"3306",
        "SourceSecurityGroupId":{"Ref":"dbSG"},
        "GroupId":{"Ref":"appSG"}

      }
    },





 }
}